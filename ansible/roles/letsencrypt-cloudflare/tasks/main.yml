---
- name: Check required CloudFlare variables
  assert:
    that:
      - lookup('vars',item) is defined
    msg: "{{ item }} is not defined!"
  with_items:
    - lc_cloudflare_account_email
    - lc_cloudflare_account_api_token
    - lc_cloudflare_zone
    - lc_public_domain

- name: Debug var only with -vv
  debug:
    msg: "{{ item }}={{ lookup('vars',item) }}"
    verbosity: 2
  with_items:
    - lc_cloudflare_account_email
    - lc_cloudflare_account_api_token
    - lc_cloudflare_zone
    - lc_certificates_dir
    - lc_public_domain
    - lc_acme_directory

- name: Create certificates dir
  file:
    path: "{{ lc_certificates_dir }}/{{ lc_public_domain }}"
    state: directory
    mode: 0755

- name: Create account-key
  openssl_privatekey:
    path: "{{ lc_certificates_dir }}/account.key"
    type: RSA
    size: 4096

- name: Fetch letsencrypt root ca
  get_url:
    url: https://letsencrypt.org/certs/isrgrootx1.pem.txt
    dest: "{{ lc_certificates_dir }}/isrgrootx1.pem"

- name: Create {{ lc_public_domain }}.key
  openssl_privatekey:
    path: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/cert.key"
    type: RSA
    size: 4096

- name: Generate an OpenSSL Certificate Signing Request with subjectAltName extension
  openssl_csr:
    path: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/cert.csr"
    privatekey_path: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/cert.key"
    subject_alt_name: "DNS:*.apps.{{ lc_public_domain }},DNS:api.{{ lc_public_domain }}"

- name: Create a challenge for {{ lc_public_domain }} using a account key file.
  acme_certificate:
    account_key_src: "{{ lc_certificates_dir }}/account.key"
    account_email: "{{ cloudflare_account_email }}"
    src: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/cert.csr"
    cert: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/cert.crt"
    challenge: dns-01
    acme_directory: "{{ lc_acme_directory }}"
    acme_version: 2
    # Renew if the certificate is at least 30 days old
    remaining_days: 60
    terms_agreed: yes
  register: sample_com_challenge

- name: Debug var only with -vv
  debug:
    var: sample_com_challenge
    verbosity: 2

- set_fact: 
    challenge_data_dns: "{{ sample_com_challenge.challenge_data_dns }}"
  when: sample_com_challenge is changed

- name: Create DNS record
  cloudflare_dns:
    zone: "{{ lc_cloudflare_zone }}"
    record: "{{ item.0.key }}"
    ttl: 120
    type: TXT
    value: "{{ item.1 }}"
    account_email: "{{ lc_cloudflare_account_email }}"
    account_api_token: "{{ lc_cloudflare_account_api_token }}"
  register: record
  loop: "{{ challenge_data_dns | default({}) | dict2items | subelements('value') }}"
  when: sample_com_challenge is changed

- name: DNS record info
  debug:
    msg: "{{ item.0.key }} TXT {{ item.1 }}"
  loop: "{{ challenge_data_dns | default({}) | dict2items | subelements('value') }}"
  when: sample_com_challenge is changed 

- pause:
    seconds: 120
  when: sample_com_challenge is changed

- name: Let the challenge be validated and retrieve the cert and intermediate certificate
  acme_certificate:
    account_key_src: "{{ lc_certificates_dir }}/account.key"
    account_email: "{{ lc_cloudflare_account_email }}"
    src: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/cert.csr"
    cert: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/cert.crt"
    fullchain: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/fullchain.crt"
    chain: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/intermediate.crt"
    challenge: dns-01
    acme_version: 2
    acme_directory: "{{ lc_acme_directory }}"
    remaining_days: 60
    data: "{{ sample_com_challenge }}"
  when: sample_com_challenge is changed

- name: Delete DNS record
  cloudflare_dns:
    zone: "{{ lc_cloudflare_zone }}"
    record: "{{ item.0.key }}"
    ttl: 120
    type: TXT
    value: "{{ item.1 }}"
    account_email: "{{ lc_cloudflare_account_email }}"
    account_api_token: "{{ lc_cloudflare_account_api_token }}"
    state: absent
  loop: "{{ challenge_data_dns | default({}) | dict2items | subelements('value') }}"
  when: sample_com_challenge is changed 

- name: concat root ca and intermediate
  shell: "cat {{ lc_certificates_dir }}/isrgrootx1.pem {{ lc_certificates_dir }}/{{ lc_public_domain }}/intermediate.crt >> {{ lc_certificates_dir }}/{{ lc_public_domain }}/ca-bundle.pem"
  args:
    creates: "{{ lc_certificates_dir }}/{{ lc_public_domain }}/ca-bundle.pem"
